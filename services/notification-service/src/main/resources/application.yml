server:
  port: 8086

spring:
  application:
    name: notification-service
  
  datasource:
    url: jdbc:postgresql://localhost:5432/notificationdb
    username: postgres
    password: 123
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  
  redis:
    host: localhost
    port: 6379
    timeout: 2000ms
  
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: notification-service-group
      auto-offset-reset: earliest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME:}
    password: ${MAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.xypay.notification: DEBUG
    org.springframework.security: DEBUG

# Notification service specific configurations
notification:
  email:
    enabled: true
    from: noreply@xypay.com
  sms:
    enabled: true
    provider: twilio
  push:
    enabled: true
    provider: fcm
  websocket:
    enabled: true

# Twilio configuration
twilio:
  account:
    sid: ${TWILIO_ACCOUNT_SID:}
  auth:
    token: ${TWILIO_AUTH_TOKEN:}
  phone:
    number: ${TWILIO_PHONE_NUMBER:}

# FCM configuration
fcm:
  api:
    key: ${FCM_API_KEY:}
