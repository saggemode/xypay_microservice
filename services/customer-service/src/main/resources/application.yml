server:
  port: 8082

spring:
  application:
    name: customer-service
  
  datasource:
    url: jdbc:postgresql://localhost:5432/customerdb
    username: postgres
    password: 123
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  h2:
    console:
      enabled: true
  
  # redis:
  #   host: localhost
  #   port: 6379
  #   timeout: 2000ms
  
  # kafka:
  #   bootstrap-servers: localhost:9092
  #   consumer:
  #     group-id: customer-service-group
  #     auto-offset-reset: earliest
  #   producer:
  #     key-serializer: org.apache.kafka.common.serialization.StringSerializer
  #     value-serializer: org.apache.kafka.common.serialization.StringSerializer

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.xypay.customer: DEBUG
    org.springframework.security: DEBUG

# Application specific configuration
app:
  encryption:
    key: ${ENCRYPTION_KEY:default-encryption-key-change-in-production}
    salt: ${ENCRYPTION_SALT:default-salt-change-in-production}
  
  file:
    upload:
      path: ${FILE_UPLOAD_PATH:uploads/}
      max-size: ${FILE_MAX_SIZE:10MB}